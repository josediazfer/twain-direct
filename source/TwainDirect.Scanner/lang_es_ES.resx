<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="errLookingForScanners" xml:space="preserve">
    <value>Localizando escaners...</value>
  </data>
  <data name="errNoCloudConfig" xml:space="preserve">
    <value>No se configuro una dirección url que apunte hacia un servidor Cloud</value>
  </data>
  <data name="errNoCloudManager" xml:space="preserve">
    <value>No se ha encontrado una direccion para la administracion del Cloud</value>
  </data>
  <data name="errNoScannersFound" xml:space="preserve">
    <value>No se encontraron escaners.</value>
  </data>
  <data name="errRegisterCloudScanner" xml:space="preserve">
    <value>Fallo al registrar el escaner en el Cloud. Mensaje de error '{0}'</value>
  </data>
  <data name="errRegisterTwainDriver" xml:space="preserve">
    <value>Quieres seleccionar un controlador TWAIN?  Si es así, asegurate que este conectado y encendido</value>
  </data>
  <data name="errUnableToUseScanner" xml:space="preserve">
    <value>No se pudo usar el escaner seleccionado.  Asegurate que este encendido y conectado</value>
  </data>
  <data name="strButtonCloudRegisterEllipsis" xml:space="preserve">
    <value>Registrar Cloud...</value>
  </data>
  <data name="strButtonConfigure" xml:space="preserve">
    <value>Configurar</value>
  </data>
  <data name="strButtonManageCloudEllipsis" xml:space="preserve">
    <value>Gestionar Cloud...</value>
  </data>
  <data name="strButtonRefreshScannersList" xml:space="preserve">
    <value>Actualizar lista de escaners</value>
  </data>
  <data name="strButtonRegisterEllipsis" xml:space="preserve">
    <value>Seleccionar escaner...</value>
    <comment>Pick a new TWAIN Driver...</comment>
  </data>
  <data name="strButtonSetup" xml:space="preserve">
    <value>Configurar</value>
  </data>
  <data name="strButtonStart" xml:space="preserve">
    <value>Iniciar</value>
    <comment>Start server...</comment>
  </data>
  <data name="strButtonStop" xml:space="preserve">
    <value>Parar</value>
    <comment>Stop server...</comment>
  </data>
  <data name="strButtonTwainLocalManagerEllipsis" xml:space="preserve">
    <value>Gestión Local...</value>
  </data>
  <data name="strCheckboxAdvertise" xml:space="preserve">
    <value>Iniciar TWAIN local y TWAIN Cloud cuando la aplicación se inicia</value>
  </data>
  <data name="strCheckboxConfirmation" xml:space="preserve">
    <value>Enseñar mensaje de confirmación cuando se empieza a escanear</value>
  </data>
  <data name="strCheckboxRunOnLogin" xml:space="preserve">
    <value>Ejecute este programa cuando inicie sesión</value>
  </data>
  <data name="strCheckboxStartNpm" xml:space="preserve">
    <value>Automaticamente ejecutar 'npm start' para twain-cloud-express</value>
  </data>
  <data name="strCloseTwainBridge" xml:space="preserve">
    <value>Quieres cerrar 'TWAIN Direct: TWAIN Bridge'?</value>
  </data>
  <data name="strFormMainTitle" xml:space="preserve">
    <value>TWAIN Direct: TWAIN Bridge</value>
    <comment>Main Form title...</comment>
  </data>
  <data name="strLabelCurrentDriver" xml:space="preserve">
    <value>Controlador:</value>
  </data>
  <data name="strLabelCurrentNote" xml:space="preserve">
    <value>Nombre:</value>
  </data>
  <data name="strLabelRegisteredDevice" xml:space="preserve">
    <value>Dispositivo Cloud:</value>
  </data>
  <data name="strLabelStep1" xml:space="preserve">
    <value>Selecciona el controlador de TWAIN para tu escaner.</value>
  </data>
  <data name="strLabelStep2" xml:space="preserve">
    <value>Configura tu sistema para soportar TWAIN en local (opcional).</value>
  </data>
  <data name="strLabelStep3" xml:space="preserve">
    <value>Registrar con TWAIN Cloud (opcional).</value>
  </data>
  <data name="strMenuAbout" xml:space="preserve">
    <value>&amp;Acerca de</value>
    <comment>Information about this program...</comment>
  </data>
  <data name="strMenuExit" xml:space="preserve">
    <value>E&amp;xit...</value>
    <comment>Exit the program...</comment>
  </data>
  <data name="strMenuShowConsole" xml:space="preserve">
    <value>&amp;Abrir</value>
    <comment>Raise the server console window...</comment>
  </data>
  <data name="strSelectScannerDriver" xml:space="preserve">
    <value>Seleccionar el controlador de escaner:</value>
  </data>
  <data name="strSetNote" xml:space="preserve">
    <value>Una nota o un alias para tu escaner:</value>
  </data>
  <data name="strTextAbout" xml:space="preserve">
    <value>Un programa que permite que las aplicaciones TWAIN Direct se comuniquen con escáneres compatibles con controladores TWAIN.</value>
    <comment>Information about this program...</comment>
  </data>
  <data name="strTextCurrentCloud" xml:space="preserve">
    <value>Cloud seleccionado:</value>
    <comment>URI of the current cloud</comment>
  </data>
  <data name="strTextListingScannersBegin" xml:space="preserve">
    <value>Listado de escáneres registrados... (espere la lista)</value>
    <comment>Notice that listing is starting...</comment>
  </data>
  <data name="strTextListingScannersEnd" xml:space="preserve">
    <value>Listado completo...</value>
    <comment>Notice that listing is done...</comment>
  </data>
  <data name="strTextNoScannersRegistered" xml:space="preserve">
    <value>No hay escaners registrados...</value>
    <comment>Couldn't find any scanners...</comment>
  </data>
  <data name="strTextNpmFailed" xml:space="preserve">
    <value>Fallo al iniciar 'npm'</value>
  </data>
  <data name="strTextStartNpm" xml:space="preserve">
    <value>Iniciando 'npm start', esperaremos 15 minutos a que arranque.</value>
  </data>
</root>